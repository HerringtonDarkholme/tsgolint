From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: auvred <aauvred@gmail.com>
Date: Wed, 26 Mar 2025 16:03:33 +0300
Subject: [PATCH] Add cache for Common VFS


diff --git a/internal/vfs/internal/internal.go b/internal/vfs/internal/internal.go
index d6e638954..ca68e0e7d 100644
--- a/internal/vfs/internal/internal.go
+++ b/internal/vfs/internal/internal.go
@@ -5,6 +5,8 @@ import (
 	"encoding/binary"
 	"fmt"
 	"io/fs"
+	"os"
+	"sync"
 	"unicode/utf16"
 
 	"github.com/microsoft/typescript-go/internal/tspath"
@@ -14,6 +16,8 @@ import (
 type Common struct {
 	RootFor  func(root string) fs.FS
 	Realpath func(path string) string
+	statCache sync.Map
+	dirCache sync.Map
 }
 
 func RootLength(p string) int {
@@ -41,6 +45,9 @@ func (vfs *Common) RootAndPath(path string) (fsys fs.FS, rootName string, rest s
 }
 
 func (vfs *Common) Stat(path string) vfs.FileInfo {
+	if cached, ok := vfs.statCache.Load(path); ok {
+		return cached.(os.FileInfo)
+	}
 	fsys, _, rest := vfs.RootAndPath(path)
 	if fsys == nil {
 		return nil
@@ -49,6 +56,7 @@ func (vfs *Common) Stat(path string) vfs.FileInfo {
 	if err != nil {
 		return nil
 	}
+	vfs.statCache.Store(path, stat)
 	return stat
 }
 
@@ -109,6 +117,9 @@ func (vfs *Common) GetAccessibleEntries(path string) (result vfs.Entries) {
 }
 
 func (vfs *Common) getEntries(path string) []vfs.DirEntry {
+	if cached, ok := vfs.dirCache.Load(path); ok {
+		return cached.([]fs.DirEntry)
+	}
 	fsys, _, rest := vfs.RootAndPath(path)
 	if fsys == nil {
 		return nil
@@ -119,6 +130,7 @@ func (vfs *Common) getEntries(path string) []vfs.DirEntry {
 		return nil
 	}
 
+	vfs.dirCache.Store(path, entries)
 	return entries
 }
 
