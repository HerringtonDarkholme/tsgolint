
// Code generated by tools/gen_shims. DO NOT EDIT.

package compiler

import "github.com/microsoft/typescript-go/internal/ast"
import "github.com/microsoft/typescript-go/internal/compiler"
import "github.com/microsoft/typescript-go/internal/compiler/module"
import "github.com/microsoft/typescript-go/internal/core"
import "github.com/microsoft/typescript-go/internal/tsoptions"
import "github.com/microsoft/typescript-go/internal/tspath"
import "github.com/microsoft/typescript-go/internal/vfs"
import _ "unsafe"

type CompilerHost = compiler.CompilerHost
type EmitHost = compiler.EmitHost
type EmitOptions = compiler.EmitOptions
type EmitResult = compiler.EmitResult
type FileIncludeKind = compiler.FileIncludeKind
const FileIncludeKindAutomaticTypeDirectiveFile = compiler.FileIncludeKindAutomaticTypeDirectiveFile
const FileIncludeKindImport = compiler.FileIncludeKindImport
const FileIncludeKindLibFile = compiler.FileIncludeKindLibFile
const FileIncludeKindLibReferenceDirective = compiler.FileIncludeKindLibReferenceDirective
const FileIncludeKindOutputFromProjectReference = compiler.FileIncludeKindOutputFromProjectReference
const FileIncludeKindReferenceFile = compiler.FileIncludeKindReferenceFile
const FileIncludeKindRootFile = compiler.FileIncludeKindRootFile
const FileIncludeKindSourceFromProjectReference = compiler.FileIncludeKindSourceFromProjectReference
const FileIncludeKindTypeReferenceDirective = compiler.FileIncludeKindTypeReferenceDirective
type FileIncludeReason = compiler.FileIncludeReason
type FileInfo = compiler.FileInfo
//go:linkname NewCompilerHost github.com/microsoft/typescript-go/internal/compiler.NewCompilerHost
func NewCompilerHost(options *core.CompilerOptions, currentDirectory string, fs vfs.FS, defaultLibraryPath string) compiler.CompilerHost
//go:linkname NewProgram github.com/microsoft/typescript-go/internal/compiler.NewProgram
func NewProgram(options compiler.ProgramOptions) *compiler.Program
//go:linkname NewProgramFromParsedCommandLine github.com/microsoft/typescript-go/internal/compiler.NewProgramFromParsedCommandLine
func NewProgramFromParsedCommandLine(config *tsoptions.ParsedCommandLine, host compiler.CompilerHost) *compiler.Program
type Program = compiler.Program
//go:linkname Program_findSourceFile github.com/microsoft/typescript-go/internal/compiler.(*Program).findSourceFile
func Program_findSourceFile(recv *compiler.Program, candidate string, reason compiler.FileIncludeReason) *ast.SourceFile
type ProgramOptions = compiler.ProgramOptions
//go:linkname SortAndDeduplicateDiagnostics github.com/microsoft/typescript-go/internal/compiler.SortAndDeduplicateDiagnostics
func SortAndDeduplicateDiagnostics(diagnostics []*ast.Diagnostic) []*ast.Diagnostic
type WriteFileData = compiler.WriteFileData
//go:linkname ProcessAllProgramFiles github.com/microsoft/typescript-go/internal/compiler.processAllProgramFiles
func ProcessAllProgramFiles(host compiler.CompilerHost, programOptions compiler.ProgramOptions, compilerOptions *core.CompilerOptions, resolver *module.Resolver, rootFiles []string, libs []string) (files []*ast.SourceFile, resolvedModules map[tspath.Path]module.ModeAwareCache[*module.ResolvedModule], sourceFileMetaDatas map[tspath.Path]*ast.SourceFileMetaData)
